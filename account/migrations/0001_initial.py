# Generated by Django 4.2.7 on 2024-04-28 18:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('image', models.ImageField(default='profile_pics/default.png', upload_to='profile_pics')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('phone_number', models.CharField(max_length=20)),
                ('onboarded', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shareholder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('role', models.CharField(choices=[('founder', 'Founder'), ('investor', 'Investor'), ('advisor', 'Advisor')], max_length=150)),
                ('country', models.CharField(max_length=150)),
                ('biography', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Investor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regain_period', models.DateField(blank=True, null=True)),
                ('best_roi', models.IntegerField(blank=True, null=True)),
                ('maximum_drop_invalue', models.IntegerField(blank=True, null=True)),
                ('purpose', models.CharField(blank=True, choices=[('growth', 'Long-term Growth'), ('income', 'Regular Income'), ('speculation', 'Short-term Speculation'), ('diversification', 'Portfolio Diversification'), ('other', 'Other')], max_length=20)),
                ('other_purpose', models.CharField(blank=True, max_length=100)),
                ('investment_date', models.DateField(blank=True, null=True)),
                ('amount_of_investment', models.IntegerField(blank=True, null=True)),
                ('Networth', models.IntegerField(blank=True, null=True)),
                ('financial_situation', models.CharField(choices=[('stable', 'Stable'), ('moderate', 'Moderate'), ('volatile', 'Volatile'), ('other', 'Other')], max_length=20)),
                ('other_financial_situation', models.CharField(blank=True, max_length=100)),
                ('other_industries', models.CharField(blank=True, max_length=100)),
                ('industries', models.ManyToManyField(blank=True, null=True, related_name='investors', to='account.industry')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Founder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('failed_stories', models.TextField(blank=True)),
                ('startups_launched', models.IntegerField(default=0)),
                ('other_industries', models.CharField(blank=True, max_length=100)),
                ('industries', models.ManyToManyField(blank=True, null=True, related_name='founders', to='account.industry')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Advisor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
